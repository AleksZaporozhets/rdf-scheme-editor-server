<<<<<<< HEAD
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>ru.agentlab.rdf4j.server</groupId>
		<artifactId>org.eclipse.rdf4j</artifactId>
		<version>${rdf4j.server.version}</version>
        <relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>org.eclipse.rdf4j.jaxrs</artifactId>
	<packaging>bundle</packaging>

	<name>RDF4J JAX-RS OSGi DS Services</name>
	<description>JAX-RS OSGi DS Services implementing a REST-style protocol</description>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Version>${project.version}</Bundle-Version>
						<!-- ,org.eclipse.rdf4j.query.algebra.evaluation;-split-package:=first -->
						<Export-Package>
							org.eclipse.rdf4j.http.server*;version=${project.version}
						</Export-Package>
						<Import-Package>
							*
						</Import-Package>
                        <Require-Capability>
                            osgi.contract; filter:="(&amp;(osgi.contract=JavaServlet)(version>=3.1))"
                        </Require-Capability>
                        <!--<RequireBundle>
                        	rdf4j-queryalgebra-evaluation
                        </RequireBundle>-->
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <version>${plugin.depends.version}</version>
                <executions>
                    <execution>
                        <id>generate-depends-file</id>
                        <goals>
                            <goal>generate-depends-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>
	
	<dependencies>
        <!-- Provide the KarafTestSupport -->
        <dependency>
            <groupId>org.apache.karaf.itests</groupId>
            <artifactId>common</artifactId>
            <version>${karaf.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Define the Apache Karaf version to download and use for the test -->
        <!-- We use a released version here to avoid SNAPSHOT resolution -->
        <dependency>
            <groupId>org.apache.karaf</groupId>
            <artifactId>apache-karaf</artifactId>
            <version>${karaf.version}</version>
            <scope>test</scope>
            <type>tar.gz</type>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Required to use shell commands in the tests -->
        <dependency>
            <groupId>org.apache.karaf.shell</groupId>
            <artifactId>org.apache.karaf.shell.core</artifactId>
            <version>${karaf.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Provide the PaxExam Karaf support -->
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-container-karaf</artifactId>
            <version>${pax.exam.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Provide the PaxExam JUnit extension -->
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-junit4</artifactId>
            <version>${pax.exam.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-atinject_1.0_spec</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.hamcrest</artifactId>
            <version>1.3_1</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

</project>
=======
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>ru.agentlab.rdf4j.server</groupId>
		<artifactId>org.eclipse.rdf4j</artifactId>
		<version>${rdf4j.server.version}</version>
        <relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>org.eclipse.rdf4j.jaxrs</artifactId>
	<packaging>bundle</packaging>

	<name>RDF4J JAX-RS OSGi DS Services</name>
	<description>JAX-RS OSGi DS Services implementing a REST-style protocol</description>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Version>${project.version}</Bundle-Version>
						<!-- ,org.eclipse.rdf4j.query.algebra.evaluation;-split-package:=first -->
						<Export-Package>
							org.eclipse.rdf4j.http.server*;version=${project.version}
						</Export-Package>
						<Import-Package>
							*
						</Import-Package>
                        <Require-Capability>
                            osgi.contract; filter:="(&amp;(osgi.contract=JavaServlet)(version>=3.1))"
                        </Require-Capability>
                        <!--<RequireBundle>
                        	rdf4j-queryalgebra-evaluation
                        </RequireBundle>-->
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <version>${plugin.depends.version}</version>
                <executions>
                    <execution>
                        <id>generate-depends-file</id>
                        <goals>
                            <goal>generate-depends-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>
	
	<dependencies>
        <!-- Provide the KarafTestSupport -->
        <dependency>
            <groupId>org.apache.karaf.itests</groupId>
            <artifactId>common</artifactId>
            <version>${karaf.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Define the Apache Karaf version to download and use for the test -->
        <!-- We use a released version here to avoid SNAPSHOT resolution -->
        <dependency>
            <groupId>org.apache.karaf</groupId>
            <artifactId>apache-karaf</artifactId>
            <version>${karaf.version}</version>
            <scope>test</scope>
            <type>tar.gz</type>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Required to use shell commands in the tests -->
        <dependency>
            <groupId>org.apache.karaf.shell</groupId>
            <artifactId>org.apache.karaf.shell.core</artifactId>
            <version>${karaf.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Provide the PaxExam Karaf support -->
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-container-karaf</artifactId>
            <version>${pax.exam.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Provide the PaxExam JUnit extension -->
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-junit4</artifactId>
            <version>${pax.exam.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-atinject_1.0_spec</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.hamcrest</artifactId>
            <version>1.3_1</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

</project>
>>>>>>> 4e002495842c02ff0066ad379e3d176ba774e857
